// Code generated by protoc-gen-go. DO NOT EDIT.
// source: example/example.proto

package example

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import any "github.com/golang/protobuf/ptypes/any"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"
import _ "github.com/srikrsna/protoc-gen-graphql/graphql"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// EnumTest description
type EnumTest int32

const (
	// Field Description
	EnumTest_DEFAULT   EnumTest = 0
	EnumTest_VALUE_ONE EnumTest = 1
	EnumTest_SKIP_ONE  EnumTest = 3
)

var EnumTest_name = map[int32]string{
	0: "DEFAULT",
	1: "VALUE_ONE",
	3: "SKIP_ONE",
}
var EnumTest_value = map[string]int32{
	"DEFAULT":   0,
	"VALUE_ONE": 1,
	"SKIP_ONE":  3,
}

func (x EnumTest) String() string {
	return proto.EnumName(EnumTest_name, int32(x))
}
func (EnumTest) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_example_ecb528cf64199185, []int{0}
}

// Example description
type Example struct {
	// Field Comments
	Id           string       `protobuf:"bytes,1,opt,name=id" json:"id,omitempty" graphql:"id"`
	ComplexName  uint32       `protobuf:"varint,2,opt,name=complex_name,json=complexName" json:"complex_name,omitempty" graphql:"complexName"`
	FloatValue   float32      `protobuf:"fixed32,3,opt,name=float_value,json=floatValue" json:"float_value,omitempty" graphql:"floatValue"`
	BoolValue    bool         `protobuf:"varint,4,opt,name=bool_value,json=boolValue" json:"bool_value,omitempty" graphql:"boolValue"`
	DoubleValue  float64      `protobuf:"fixed64,5,opt,name=double_value,json=doubleValue" json:"double_value,omitempty" graphql:"doubleValue"`
	Ref          *Reference   `protobuf:"bytes,6,opt,name=ref" json:"ref,omitempty" graphql:"ref"`
	Refs         []*Reference `protobuf:"bytes,7,rep,name=refs" json:"refs,omitempty" graphql:"refs"`
	Numbers      []int32      `protobuf:"varint,8,rep,packed,name=numbers" json:"numbers,omitempty" graphql:"numbers"`
	As           int32        `protobuf:"varint,12,opt,name=as" json:"as,omitempty" graphql:"as"`
	Bts          []byte       `protobuf:"bytes,9,opt,name=bts,proto3" json:"bts,omitempty" graphql:"bts"`
	EnumValue    EnumTest     `protobuf:"varint,10,opt,name=enum_value,json=enumValue,enum=example.EnumTest" json:"enum_value,omitempty" graphql:"enumValue"`
	EnumRepeated []EnumTest   `protobuf:"varint,11,rep,packed,name=enum_repeated,json=enumRepeated,enum=example.EnumTest" json:"enum_repeated,omitempty" graphql:"enumRepeated"`
	// Types that are valid to be assigned to Value:
	//	*Example_First
	//	*Example_Second
	Value                isExample_Value      `protobuf_oneof:"value" graphql:"-"`
	Any                  *any.Any             `protobuf:"bytes,14,opt,name=any" json:"any,omitempty" graphql:"-"`
	T                    *timestamp.Timestamp `protobuf:"bytes,15,opt,name=t" json:"t,omitempty" graphql:"-"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" graphql:"-"`
	XXX_unrecognized     []byte               `json:"-" graphql:"-"`
	XXX_sizecache        int32                `json:"-" graphql:"-"`
}

func (m *Example) Reset()         { *m = Example{} }
func (m *Example) String() string { return proto.CompactTextString(m) }
func (*Example) ProtoMessage()    {}
func (*Example) Descriptor() ([]byte, []int) {
	return fileDescriptor_example_ecb528cf64199185, []int{0}
}
func (m *Example) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Example.Unmarshal(m, b)
}
func (m *Example) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Example.Marshal(b, m, deterministic)
}
func (dst *Example) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Example.Merge(dst, src)
}
func (m *Example) XXX_Size() int {
	return xxx_messageInfo_Example.Size(m)
}
func (m *Example) XXX_DiscardUnknown() {
	xxx_messageInfo_Example.DiscardUnknown(m)
}

var xxx_messageInfo_Example proto.InternalMessageInfo

type isExample_Value interface {
	isExample_Value()
}

type Example_First struct {
	First string `protobuf:"bytes,16,opt,name=first,oneof" graphql:"first"`
}
type Example_Second struct {
	Second *Reference `protobuf:"bytes,13,opt,name=second,oneof" graphql:"second"`
}

func (*Example_First) isExample_Value()  {}
func (*Example_Second) isExample_Value() {}

func (m *Example) GetValue() isExample_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Example) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Example) GetComplexName() uint32 {
	if m != nil {
		return m.ComplexName
	}
	return 0
}

func (m *Example) GetFloatValue() float32 {
	if m != nil {
		return m.FloatValue
	}
	return 0
}

func (m *Example) GetBoolValue() bool {
	if m != nil {
		return m.BoolValue
	}
	return false
}

func (m *Example) GetDoubleValue() float64 {
	if m != nil {
		return m.DoubleValue
	}
	return 0
}

func (m *Example) GetRef() *Reference {
	if m != nil {
		return m.Ref
	}
	return nil
}

func (m *Example) GetRefs() []*Reference {
	if m != nil {
		return m.Refs
	}
	return nil
}

func (m *Example) GetNumbers() []int32 {
	if m != nil {
		return m.Numbers
	}
	return nil
}

func (m *Example) GetAs() int32 {
	if m != nil {
		return m.As
	}
	return 0
}

func (m *Example) GetBts() []byte {
	if m != nil {
		return m.Bts
	}
	return nil
}

func (m *Example) GetEnumValue() EnumTest {
	if m != nil {
		return m.EnumValue
	}
	return EnumTest_DEFAULT
}

func (m *Example) GetEnumRepeated() []EnumTest {
	if m != nil {
		return m.EnumRepeated
	}
	return nil
}

func (m *Example) GetFirst() string {
	if x, ok := m.GetValue().(*Example_First); ok {
		return x.First
	}
	return ""
}

func (m *Example) GetSecond() *Reference {
	if x, ok := m.GetValue().(*Example_Second); ok {
		return x.Second
	}
	return nil
}

func (m *Example) GetAny() *any.Any {
	if m != nil {
		return m.Any
	}
	return nil
}

func (m *Example) GetT() *timestamp.Timestamp {
	if m != nil {
		return m.T
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Example) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Example_OneofMarshaler, _Example_OneofUnmarshaler, _Example_OneofSizer, []interface{}{
		(*Example_First)(nil),
		(*Example_Second)(nil),
	}
}

func _Example_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Example)
	// value
	switch x := m.Value.(type) {
	case *Example_First:
		b.EncodeVarint(16<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.First)
	case *Example_Second:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Second); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Example.Value has unexpected type %T", x)
	}
	return nil
}

func _Example_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Example)
	switch tag {
	case 16: // value.first
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Value = &Example_First{x}
		return true, err
	case 13: // value.second
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Value = &Example_Second{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Example_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Example)
	// value
	switch x := m.Value.(type) {
	case *Example_First:
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(len(x.First)))
		n += len(x.First)
	case *Example_Second:
		s := proto.Size(x.Second)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Reference struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-" graphql:"-"`
	XXX_unrecognized     []byte   `json:"-" graphql:"-"`
	XXX_sizecache        int32    `json:"-" graphql:"-"`
}

func (m *Reference) Reset()         { *m = Reference{} }
func (m *Reference) String() string { return proto.CompactTextString(m) }
func (*Reference) ProtoMessage()    {}
func (*Reference) Descriptor() ([]byte, []int) {
	return fileDescriptor_example_ecb528cf64199185, []int{1}
}
func (m *Reference) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Reference.Unmarshal(m, b)
}
func (m *Reference) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Reference.Marshal(b, m, deterministic)
}
func (dst *Reference) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Reference.Merge(dst, src)
}
func (m *Reference) XXX_Size() int {
	return xxx_messageInfo_Reference.Size(m)
}
func (m *Reference) XXX_DiscardUnknown() {
	xxx_messageInfo_Reference.DiscardUnknown(m)
}

var xxx_messageInfo_Reference proto.InternalMessageInfo

type EchoRequest struct {
	Echo                 string   `protobuf:"bytes,1,opt,name=echo" json:"echo,omitempty" graphql:"echo"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" graphql:"-"`
	XXX_unrecognized     []byte   `json:"-" graphql:"-"`
	XXX_sizecache        int32    `json:"-" graphql:"-"`
}

func (m *EchoRequest) Reset()         { *m = EchoRequest{} }
func (m *EchoRequest) String() string { return proto.CompactTextString(m) }
func (*EchoRequest) ProtoMessage()    {}
func (*EchoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_example_ecb528cf64199185, []int{2}
}
func (m *EchoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EchoRequest.Unmarshal(m, b)
}
func (m *EchoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EchoRequest.Marshal(b, m, deterministic)
}
func (dst *EchoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EchoRequest.Merge(dst, src)
}
func (m *EchoRequest) XXX_Size() int {
	return xxx_messageInfo_EchoRequest.Size(m)
}
func (m *EchoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EchoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EchoRequest proto.InternalMessageInfo

func (m *EchoRequest) GetEcho() string {
	if m != nil {
		return m.Echo
	}
	return ""
}

type EchoResponse struct {
	Name                 string   `protobuf:"bytes,2,opt,name=name" json:"name,omitempty" graphql:"name"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" graphql:"-"`
	XXX_unrecognized     []byte   `json:"-" graphql:"-"`
	XXX_sizecache        int32    `json:"-" graphql:"-"`
}

func (m *EchoResponse) Reset()         { *m = EchoResponse{} }
func (m *EchoResponse) String() string { return proto.CompactTextString(m) }
func (*EchoResponse) ProtoMessage()    {}
func (*EchoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_example_ecb528cf64199185, []int{3}
}
func (m *EchoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EchoResponse.Unmarshal(m, b)
}
func (m *EchoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EchoResponse.Marshal(b, m, deterministic)
}
func (dst *EchoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EchoResponse.Merge(dst, src)
}
func (m *EchoResponse) XXX_Size() int {
	return xxx_messageInfo_EchoResponse.Size(m)
}
func (m *EchoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EchoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EchoResponse proto.InternalMessageInfo

func (m *EchoResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GreetRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty" graphql:"id"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" graphql:"-"`
	XXX_unrecognized     []byte   `json:"-" graphql:"-"`
	XXX_sizecache        int32    `json:"-" graphql:"-"`
}

func (m *GreetRequest) Reset()         { *m = GreetRequest{} }
func (m *GreetRequest) String() string { return proto.CompactTextString(m) }
func (*GreetRequest) ProtoMessage()    {}
func (*GreetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_example_ecb528cf64199185, []int{4}
}
func (m *GreetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GreetRequest.Unmarshal(m, b)
}
func (m *GreetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GreetRequest.Marshal(b, m, deterministic)
}
func (dst *GreetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GreetRequest.Merge(dst, src)
}
func (m *GreetRequest) XXX_Size() int {
	return xxx_messageInfo_GreetRequest.Size(m)
}
func (m *GreetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GreetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GreetRequest proto.InternalMessageInfo

func (m *GreetRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GreetResponse struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty" graphql:"name"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" graphql:"-"`
	XXX_unrecognized     []byte   `json:"-" graphql:"-"`
	XXX_sizecache        int32    `json:"-" graphql:"-"`
}

func (m *GreetResponse) Reset()         { *m = GreetResponse{} }
func (m *GreetResponse) String() string { return proto.CompactTextString(m) }
func (*GreetResponse) ProtoMessage()    {}
func (*GreetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_example_ecb528cf64199185, []int{5}
}
func (m *GreetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GreetResponse.Unmarshal(m, b)
}
func (m *GreetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GreetResponse.Marshal(b, m, deterministic)
}
func (dst *GreetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GreetResponse.Merge(dst, src)
}
func (m *GreetResponse) XXX_Size() int {
	return xxx_messageInfo_GreetResponse.Size(m)
}
func (m *GreetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GreetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GreetResponse proto.InternalMessageInfo

func (m *GreetResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*Example)(nil), "example.Example")
	proto.RegisterType((*Reference)(nil), "example.Reference")
	proto.RegisterType((*EchoRequest)(nil), "example.EchoRequest")
	proto.RegisterType((*EchoResponse)(nil), "example.EchoResponse")
	proto.RegisterType((*GreetRequest)(nil), "example.GreetRequest")
	proto.RegisterType((*GreetResponse)(nil), "example.GreetResponse")
	proto.RegisterEnum("example.EnumTest", EnumTest_name, EnumTest_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ExampleService service

type ExampleServiceClient interface {
	Greet(ctx context.Context, in *GreetRequest, opts ...grpc.CallOption) (*GreetResponse, error)
	Echo(ctx context.Context, in *EchoRequest, opts ...grpc.CallOption) (*EchoResponse, error)
}

type exampleServiceClient struct {
	cc *grpc.ClientConn
}

func NewExampleServiceClient(cc *grpc.ClientConn) ExampleServiceClient {
	return &exampleServiceClient{cc}
}

func (c *exampleServiceClient) Greet(ctx context.Context, in *GreetRequest, opts ...grpc.CallOption) (*GreetResponse, error) {
	out := new(GreetResponse)
	err := grpc.Invoke(ctx, "/example.ExampleService/Greet", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *exampleServiceClient) Echo(ctx context.Context, in *EchoRequest, opts ...grpc.CallOption) (*EchoResponse, error) {
	out := new(EchoResponse)
	err := grpc.Invoke(ctx, "/example.ExampleService/Echo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ExampleService service

type ExampleServiceServer interface {
	Greet(context.Context, *GreetRequest) (*GreetResponse, error)
	Echo(context.Context, *EchoRequest) (*EchoResponse, error)
}

func RegisterExampleServiceServer(s *grpc.Server, srv ExampleServiceServer) {
	s.RegisterService(&_ExampleService_serviceDesc, srv)
}

func _ExampleService_Greet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GreetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExampleServiceServer).Greet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.ExampleService/Greet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExampleServiceServer).Greet(ctx, req.(*GreetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExampleService_Echo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EchoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExampleServiceServer).Echo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.ExampleService/Echo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExampleServiceServer).Echo(ctx, req.(*EchoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ExampleService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "example.ExampleService",
	HandlerType: (*ExampleServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Greet",
			Handler:    _ExampleService_Greet_Handler,
		},
		{
			MethodName: "Echo",
			Handler:    _ExampleService_Echo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "example/example.proto",
}

func init() { proto.RegisterFile("example/example.proto", fileDescriptor_example_ecb528cf64199185) }

var fileDescriptor_example_ecb528cf64199185 = []byte{
	// 594 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x93, 0xdf, 0x6e, 0xd3, 0x3e,
	0x14, 0xc7, 0xe7, 0xa6, 0x69, 0x9a, 0x93, 0xb4, 0xbf, 0xfe, 0xac, 0x75, 0x32, 0x95, 0x60, 0x59,
	0x80, 0x29, 0x42, 0xa8, 0x45, 0x03, 0x71, 0xcd, 0xd0, 0x0a, 0x43, 0x4c, 0x03, 0x79, 0x7f, 0x6e,
	0xa7, 0xb4, 0x3d, 0xed, 0x2a, 0x25, 0x71, 0x97, 0x38, 0xd3, 0xf6, 0x26, 0x3c, 0x08, 0x17, 0x3c,
	0x0d, 0x17, 0x3c, 0x09, 0xb2, 0xe3, 0xb6, 0xa8, 0xb0, 0xab, 0xf8, 0x7c, 0xbf, 0x1f, 0x1f, 0x1f,
	0x1f, 0x9f, 0x40, 0x17, 0xef, 0xe2, 0x74, 0x91, 0xe0, 0xc0, 0x7c, 0xfb, 0x8b, 0x5c, 0x48, 0x41,
	0x1d, 0x13, 0xf6, 0x1e, 0xcd, 0x84, 0x98, 0x25, 0x38, 0xd0, 0xf2, 0xa8, 0x9c, 0x0e, 0xe2, 0xec,
	0xbe, 0x62, 0x7a, 0xbb, 0x9b, 0x96, 0x9c, 0xa7, 0x58, 0xc8, 0x38, 0x5d, 0x18, 0xa0, 0x3b, 0xcb,
	0xe3, 0xc5, 0xf5, 0x4d, 0x32, 0x30, 0xdf, 0x4a, 0x0e, 0xbf, 0xd7, 0xc1, 0x19, 0x56, 0xe9, 0x69,
	0x1b, 0x6a, 0xf3, 0x09, 0x23, 0x01, 0x89, 0x5c, 0x5e, 0x9b, 0x4f, 0xe8, 0x1e, 0xf8, 0x63, 0xa1,
	0x9c, 0xbb, 0xab, 0x2c, 0x4e, 0x91, 0xd5, 0x02, 0x12, 0xb5, 0xb8, 0x67, 0xb4, 0xd3, 0x38, 0x45,
	0xba, 0x0b, 0xde, 0x34, 0x11, 0xb1, 0xbc, 0xba, 0x8d, 0x93, 0x12, 0x99, 0x15, 0x90, 0xa8, 0xc6,
	0x41, 0x4b, 0x97, 0x4a, 0xa1, 0x8f, 0x01, 0x46, 0x42, 0x24, 0xc6, 0xaf, 0x07, 0x24, 0x6a, 0x72,
	0x57, 0x29, 0x95, 0xbd, 0x07, 0xfe, 0x44, 0x94, 0xa3, 0x04, 0x0d, 0x60, 0x07, 0x24, 0x22, 0xdc,
	0xab, 0xb4, 0x0a, 0x79, 0x06, 0x56, 0x8e, 0x53, 0xd6, 0x08, 0x48, 0xe4, 0x1d, 0xd0, 0xfe, 0xb2,
	0x35, 0x1c, 0xa7, 0x98, 0x63, 0x36, 0x46, 0xae, 0x6c, 0xba, 0x0f, 0xf5, 0x1c, 0xa7, 0x05, 0x73,
	0x02, 0xeb, 0x01, 0x4c, 0xfb, 0x94, 0x81, 0x93, 0x95, 0xe9, 0x08, 0xf3, 0x82, 0x35, 0x03, 0x2b,
	0xb2, 0xf9, 0x32, 0x54, 0xb7, 0x8f, 0x0b, 0xe6, 0x07, 0x24, 0xb2, 0x79, 0x2d, 0x2e, 0x68, 0x07,
	0xac, 0x91, 0x2c, 0x98, 0x1b, 0x90, 0xc8, 0xe7, 0x6a, 0x49, 0x5f, 0x01, 0x60, 0x56, 0xa6, 0xa6,
	0x54, 0x08, 0x48, 0xd4, 0x3e, 0xf8, 0x7f, 0x75, 0xd2, 0x30, 0x2b, 0xd3, 0x73, 0x2c, 0x24, 0x77,
	0x15, 0x54, 0xd5, 0xfe, 0x16, 0x5a, 0x7a, 0x47, 0x8e, 0x0b, 0x8c, 0x25, 0x4e, 0x98, 0x17, 0x58,
	0xff, 0xde, 0xe4, 0x2b, 0x8e, 0x1b, 0x8c, 0xee, 0x80, 0x3d, 0x9d, 0xe7, 0x85, 0x64, 0x1d, 0xf5,
	0x18, 0xc7, 0x5b, 0xbc, 0x0a, 0xe9, 0x4b, 0x68, 0x14, 0x38, 0x16, 0xd9, 0x84, 0xb5, 0x1e, 0x6a,
	0xc7, 0xf1, 0x16, 0x37, 0x0c, 0xdd, 0x07, 0x2b, 0xce, 0xee, 0x59, 0x5b, 0xa3, 0xdb, 0xfd, 0x6a,
	0x42, 0xfa, 0xcb, 0x09, 0xe9, 0x1f, 0x66, 0xf7, 0x5c, 0x01, 0x34, 0x02, 0x22, 0xd9, 0x7f, 0x9a,
	0xea, 0xfd, 0x45, 0x9d, 0x2f, 0xe7, 0x88, 0x13, 0xf9, 0xde, 0x01, 0x5b, 0x5f, 0x3e, 0xf4, 0xc0,
	0x5d, 0x9d, 0x18, 0xee, 0x81, 0x37, 0x1c, 0x5f, 0x0b, 0x8e, 0x37, 0x25, 0x16, 0x92, 0x52, 0xa8,
	0xe3, 0xf8, 0x5a, 0x98, 0x41, 0xd2, 0xeb, 0x30, 0x04, 0xbf, 0x42, 0x8a, 0x85, 0xc8, 0x0a, 0x54,
	0xcc, 0x6a, 0xa4, 0x5c, 0xae, 0xd7, 0xe1, 0x13, 0xf0, 0x3f, 0xe6, 0x88, 0x72, 0x99, 0x67, 0x63,
	0x1c, 0xc3, 0xa7, 0xd0, 0x32, 0xfe, 0x46, 0x12, 0xb2, 0x4e, 0xf2, 0xe2, 0x0d, 0x34, 0x97, 0x3d,
	0xa5, 0x1e, 0x38, 0x47, 0xc3, 0x0f, 0x87, 0x17, 0x27, 0xe7, 0x9d, 0x2d, 0xda, 0x02, 0xf7, 0xf2,
	0xf0, 0xe4, 0x62, 0x78, 0xf5, 0xe5, 0x74, 0xd8, 0x21, 0xd4, 0x87, 0xe6, 0xd9, 0xe7, 0x4f, 0x5f,
	0x75, 0x64, 0x1d, 0x7c, 0x23, 0xd0, 0x36, 0x7f, 0xc1, 0x19, 0xe6, 0xb7, 0xf3, 0x31, 0xd2, 0x23,
	0xb0, 0xf5, 0x69, 0xb4, 0xbb, 0xea, 0xf1, 0x9f, 0xd5, 0xf5, 0x76, 0x36, 0xe5, 0xaa, 0xa8, 0xd0,
	0xff, 0xf5, 0xe3, 0xe7, 0x73, 0x07, 0xec, 0x99, 0xde, 0xfc, 0x0e, 0xea, 0xea, 0xde, 0x74, 0x7b,
	0xfd, 0xe2, 0xeb, 0x4e, 0xf5, 0xba, 0x1b, 0xaa, 0x49, 0xe1, 0xa9, 0x14, 0x0d, 0xaa, 0x3b, 0x37,
	0x6a, 0xe8, 0x97, 0x78, 0xfd, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x85, 0x90, 0xeb, 0xd3, 0x1c, 0x04,
	0x00, 0x00,
}
